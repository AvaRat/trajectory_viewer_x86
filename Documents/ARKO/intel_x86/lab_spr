global _start ; punkt wejścia – inf. dla konsolidatora

section .data
    prompt: db "write 5 digits!", 10
    prompt_len: equ $ - prompt
	word_x: db "12345"
	word_len: equ $ - word_x

section .bss
     variable: resw 1

section .text

_start:

print_massage:
    mov edx, prompt_len
    mov ecx, prompt
    mov ebx, 1
    mov eax, 4
    int 0x80

    ; read 5 bytes from stdin
    mov eax, 3		 ; 3 is recognized by the system as meaning "read"
    mov ebx, 0		 ; read from standard input
    mov ecx, variable        ; address to pass to
    mov edx, 5		 ; input length (one byte)
    int 0x80                 ; call the kernel

	mov ecx, 5	; counter = 5 -> nr of digits
	mov ebx, 0	; evx = 0
loop_on_string:
	mov ah, [variable+ebx]	;store current digit in eax
	cmp ah, 48	;'0'
	jl skip_digit
	cmp ah, 57	;'9'
	jg skip_digit
; only digits: 0-9 are processed now
	push eax	; digit is pushed to the stack
skip_digit:
	inc ebx	
	loop loop_on_string


; first on stack is the last number digit

write_from_stack:
	mov ecx, 5
	mov ebx, 0	;ebx=0
loop_on_string_2:
	
	mov ah, [variable+ebx]	;store current digit in eax
	cmp ah, 48
	jl skip_digit_2
	cmp ah, 57
	jg skip_digit_2
; only digits: 0-9 are processed now
	pop eax	; digit is pushed to the stack
	mov [variable+ebx], ah
skip_digit_2:
	inc ebx	
	loop loop_on_string_2
	
	
;mov eax, '5'

;mov [variable], eax

print_output_variable:
    mov edx, 5
    mov ecx, variable
    mov ebx, 1
    mov eax, 4
    int 0x80


	
return_0:
    mov eax, 1
    xor ebx, ebx
    int 0x80
